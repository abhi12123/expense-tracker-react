{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","className","AppReducer","state","action","type","transactions","filter","transaction","id","payload","intialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","amounts","useContext","map","total","reduce","a","b","income","item","expense","Math","abs","class","Transaction","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","size","onChange","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c435a71.chunk.js","sourcesContent":["import React from 'react';\n\n\n//header component\nconst Header=()=>(\n    <h1 className=\"header\">Expense Tracker</h1>\n)\n\nexport default Header;","//state is the intial state. action is the passed dispatch\nconst AppReducer= (state,action)=>{\n    //switch to choose the action type and function\n    switch(action.type){\n        \n        case 'DELETE_TRANSACTION':\n            \n            return {\n                //expands the elements of the state out of the array\n                ...state,\n                //filters through the transactions of the state and return transaction except for the ones whose transaction id is not equal to the payload\n                transactions:state.transactions.filter(\n                    transaction => transaction.id !== action.payload\n                )\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                //expands the elements of the state out of the array\n                ...state,\n                //new transaction element added along with state transaction elements\n                transactions:[action.payload, ...state.transactions]\n            }\n        default:\n            return state;\n    }\n}\nexport default AppReducer;","//importing createContext for global context\nimport React,{createContext, useReducer} from 'react';\n\n//importing Reducer function AppReducer \nimport AppReducer from './AppReducer';\n\n//setting the initial state. It has an array transactions with 3 elements- id,text and amount\nconst intialState={\n    transactions:[\n        {\n            id:1,\n            text:'Salary',\n            amount:10000\n        },\n        {\n            id:2,\n            text:'Books',\n            amount:-500\n        },\n        {\n            id:3,\n            text:'Coffee',\n            amount:-50\n        }\n    ]\n}\n\n//initialstate is passed to createContext to make GlobalContext. then exported\nexport const GlobalContext=createContext(intialState);\n\n//globalcontext provider tag is exported\nexport const GlobalProvider = ({children})=>{\n    //useReducer is used. state's intial value is initial state. the function into which state and dispatch is passed to the reducer function - AppReducer\n    const [state,dispatch]=useReducer(AppReducer, intialState);\n    \n    //the dispatch to delete - payload is id and type\n    function deleteTransaction(id){\n        dispatch({\n            type:'DELETE_TRANSACTION',\n            payload:id\n        });\n    }\n\n    //the dispatch to add - payload is the transaction itslelf and type\n    function addTransaction(transaction){\n        dispatch({\n            type:'ADD_TRANSACTION',\n            payload:transaction\n        });\n    }\n\n    //the return part\n    return (\n        //passed props are state, addTransaction and Delete Transaction\n        <GlobalContext.Provider value={{\n            transactions:state.transactions,\n            deleteTransaction,addTransaction\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}","import React, { useContext } from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\n//balance component\nconst Balance =()=>{\n    //Global context is used for transactions\n    const {transactions}=useContext(GlobalContext);\n\n    //amounts array created\n    const amounts=transactions.map(\n        transaction=>transaction.amount\n    );\n\n    //total is the sum of all the elements of amounts array\n    const total=amounts.reduce(\n        (a,b)=>(a+b),0\n    );\n\n    //incomelist is all the positive elements of amounts array\n    const incomelist=amounts.filter(\n        item=>item>0\n    );\n    //income is the total of incomelist array\n    const income=incomelist.reduce(\n        (a,b)=>(a+b),0\n    );\n\n    //incomelist is all the negative elements of amounts array\n    const expenselist=amounts.filter(\n        item=>item<0\n    );\n    //expense is the total of expenselist array\n    let expense=expenselist.reduce(\n        (a,b)=>(a+b),0\n    );\n    expense=Math.abs(expense)\n\n\n    return(\n        <div class='balance'>\n            <div class='total-balance'>\n                <h2>Total Balance</h2>\n                <h1>Rs.{total}</h1>\n            </div>\n            <div class='income'>\n                <h2>Income :</h2>\n                <h1>Rs.{income}</h1>\n            </div>\n            <div class=\"expense\">\n                <h2>Expense :</h2>\n                <h1>Rs.{expense}</h1>\n            </div>\n        </div>\n    )\n}\n\nexport default Balance;"," import React,{useContext} from 'react';\n import {GlobalContext} from '../context/GlobalState';\n\n //transaction component\n //argument would be individual transactions\n const Transaction=({transaction})=>{\n     //deleteTransaction given GlobalContext\n     const {deleteTransaction}=useContext(GlobalContext);\n\n     //onclicking delete transaction, transaction id is passed\n     return(\n        <li className=\"transaction\"><b>{transaction.text}:</b> {transaction.amount}Rupees \n            <button onClick={()=>deleteTransaction(transaction.id)}><i class=\"fas fa-times-circle\"></i></button>\n        </li>\n     )\n }\n\n export default Transaction;","import React,{useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\nimport Transaction from './Transaction';\n\n//transactionlist component\nconst TransactionList=()=>{\n\n    //transactions component created. initiated with GlobalContext\n    const {transactions}=useContext(GlobalContext);\n    //for each transactions component imported Transaction component is mapped. props of id and transaction is passed\n    return(\n        <div class='transactionlist'>\n            <h2>History</h2>\n            <ul>\n                {transactions.map(transaction=>(\n                    <Transaction key={transaction.id} transaction={transaction}/>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default TransactionList;","import React,{useState,useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\n//addTransaction component\nconst AddTransaction=()=>{\n    //useState used to update text and amount\n    const [text,setText] = useState('');\n    const [amount,setAmount] = useState(0);\n\n    //globalcontext used to addTransaction\n    const {addTransaction} = useContext(GlobalContext);\n\n    //this function is run on submitting the form\n    const onSubmit = e =>{\n        //prevent default used to prevent autorefresh\n        e.preventDefault();\n\n        //new transaction being made\n        const newTransaction={\n            //random num generated for ID\n            id:Math.floor(Math.random()*1000),\n            text,\n            amount:+amount\n        }\n        addTransaction(newTransaction);\n    }\n\n    //setText and setAmount sets the value of the content of input\n    return(\n        <div className=\"add-transaction\">\n            <h2>Add new Transaction</h2>\n            <form onSubmit={onSubmit}>\n                <label>Text</label>\n                <input size='5'  value={text} onChange={(e)=>(setText(e.target.value))} type='text'></input>\n                <label>Amount</label>\n                <input size='5' value={amount} onChange={(e)=>(setAmount(e.target.value))} type='number'></input>\n                <button>Add Transaction</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddTransaction;","//importing css file for App.css\nimport './App.css';\n\n//importing components\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\n//importing global context\nimport {GlobalProvider} from './context/GlobalState';\n\n//the final App\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"expense-app\">\n        <Header/>\n        <Balance/>\n        <TransactionList/>\n        <AddTransaction/>\n      </div>\n    </GlobalProvider>\n  );\n}\n\n//exporting the final App\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}